[{"C:\\Users\\Administrator\\Desktop\\博客\\admin\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\博客\\admin\\src\\App.js":"2","C:\\Users\\Administrator\\Desktop\\博客\\admin\\src\\pages\\Main.js":"3","C:\\Users\\Administrator\\Desktop\\博客\\admin\\src\\pages\\Login.js":"4","C:\\Users\\Administrator\\Desktop\\博客\\admin\\src\\pages\\AdminIndex.js":"5","C:\\Users\\Administrator\\Desktop\\博客\\admin\\src\\pages\\AddArticle.js":"6","C:\\Users\\Administrator\\Desktop\\博客\\admin\\src\\config\\apiUrl.js":"7"},{"size":206,"mtime":1608555633327,"results":"8","hashOfConfig":"9"},{"size":215,"mtime":1608555598302,"results":"10","hashOfConfig":"9"},{"size":366,"mtime":1608559070782,"results":"11","hashOfConfig":"9"},{"size":2385,"mtime":1608559217194,"results":"12","hashOfConfig":"9"},{"size":2185,"mtime":1608557217346,"results":"13","hashOfConfig":"9"},{"size":3810,"mtime":1608557575212,"results":"14","hashOfConfig":"9"},{"size":175,"mtime":1608559794266,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"jjpo3z",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Desktop\\博客\\admin\\src\\index.js",[],["35","36"],"C:\\Users\\Administrator\\Desktop\\博客\\admin\\src\\App.js",[],["37","38"],"C:\\Users\\Administrator\\Desktop\\博客\\admin\\src\\pages\\Main.js",[],"C:\\Users\\Administrator\\Desktop\\博客\\admin\\src\\pages\\Login.js",["39"],"import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Card, Input, Button, Spin, message } from 'antd';\r\nimport { UserOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport '../static/css/Login.css';\r\nimport axios from 'axios'\r\nimport servicePath from '../config/apiUrl';\r\n\r\n\r\nfunction Login(props) {\r\n  const [userName, setUserName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const checkLogin = () => {\r\n    setIsLoading(true)\r\n    if (!userName) {\r\n      message.error('用户名不能为空')\r\n      setTimeout(() => {\r\n        setIsLoading(false)\r\n      }, 500)\r\n      return false\r\n    } else if (!password) {\r\n      message.error('密码不能为空')\r\n      setTimeout(() => {\r\n        setIsLoading(false)\r\n      }, 500)\r\n      return false\r\n    }\r\n    let dataProps = {\r\n      'userName': userName,\r\n      'password': password\r\n    }\r\n    axios({\r\n      method: 'post',\r\n      url: servicePath.checkLogin,\r\n      data: dataProps,\r\n      withCredentials: true\r\n    }).then(\r\n      res => {\r\n        setIsLoading(false)\r\n        if (res.data.data == '登录成功') {\r\n          localStorage.setItem('openId', res.data.openId)\r\n          props.history.push('/index')\r\n        } else {\r\n          message.error('用户名密码错误')\r\n        }\r\n      }\r\n    )\r\n\r\n    setTimeout(() => {\r\n      setIsLoading(false)\r\n    }, 1000)\r\n  }\r\n  return (\r\n    <div className=\"login-div\">\r\n\r\n      <Spin tip=\"Loading...\" spinning={isLoading}>\r\n        <Card title=\"请登陆\" bordered={true} style={{ width: 400 }} >\r\n          <Input\r\n            id=\"userName\"\r\n            size=\"large\"\r\n            placeholder=\"Enter your userName\"\r\n            prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            onChange={(e) => { setUserName(e.target.value) }}\r\n          />\r\n          <br /><br />\r\n          <Input.Password\r\n            id=\"password\"\r\n            size=\"large\"\r\n            placeholder=\"Enter your password\"\r\n            prefix={<KeyOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            onChange={(e) => { setPassword(e.target.value) }}\r\n          />\r\n          <br /><br />\r\n          <Button type=\"primary\" size=\"large\" block onClick={checkLogin} > Login in </Button>\r\n        </Card>\r\n      </Spin>\r\n    </div>\r\n  )\r\n}\r\nexport default Login","C:\\Users\\Administrator\\Desktop\\博客\\admin\\src\\pages\\AdminIndex.js",["40"],"import React, { useState } from 'react';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { UserAddOutlined, FileAddOutlined, DesktopOutlined, FileSearchOutlined } from '@ant-design/icons';\r\nimport { Route } from \"react-router-dom\";\r\nimport AddArticle from './AddArticle'\r\nimport '../static/css/AdminIndex.css'\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nfunction AdminIndex() {\r\n  const [collapsed, setCollapsed] = useState(false)\r\n  const onCollapse = collapsed => {\r\n    setCollapsed(collapsed)\r\n  };\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n      <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n          <Menu.Item key=\"1\">\r\n            <DesktopOutlined />\r\n            <span>工作台</span>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <FileAddOutlined />\r\n            <span>添加文章</span>\r\n          </Menu.Item>\r\n          <SubMenu\r\n            key=\"sub1\"\r\n            title={\r\n              <span>\r\n                <UserAddOutlined />\r\n                <span>文章管理</span>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key=\"3\">添加文章</Menu.Item>\r\n            <Menu.Item key=\"4\">文章列表</Menu.Item>\r\n\r\n          </SubMenu>\r\n\r\n          <Menu.Item key=\"9\">\r\n            <FileSearchOutlined />\r\n            <span>留言管理</span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout>\r\n        <Content style={{ margin: '0 16px' }}>\r\n          <Breadcrumb style={{ margin: '16px 0' }}>\r\n            <Breadcrumb.Item>后台管理</Breadcrumb.Item>\r\n            <Breadcrumb.Item>工作台</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\r\n            <div>\r\n              <Route path=\"/index/\" exact component={AddArticle} />\r\n            </div>\r\n          </div>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>JSPang.com</Footer>\r\n      </Layout>\r\n    </Layout>\r\n  )\r\n\r\n}\r\n\r\nexport default AdminIndex","C:\\Users\\Administrator\\Desktop\\博客\\admin\\src\\pages\\AddArticle.js",["41","42","43","44","45","46","47","48","49","50","51","52"],"import React, { useState } from 'react';\r\nimport marked from 'marked'\r\nimport '../static/css/AddArticle.css'\r\nimport { Row, Col, Input, Select, Button, DatePicker } from 'antd'\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input\r\n\r\nfunction AddArticle() {\r\n  const [articleId, setArticleId] = useState(0)  // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n  const [articleTitle, setArticleTitle] = useState('')   //文章标题\r\n  const [articleContent, setArticleContent] = useState('')  //markdown的编辑内容\r\n  const [markdownContent, setMarkdownContent] = useState('预览内容') //html内容\r\n  const [introducemd, setIntroducemd] = useState()            //简介的markdown内容\r\n  const [introducehtml, setIntroducehtml] = useState('等待编辑') //简介的html内容\r\n  const [showDate, setShowDate] = useState()   //发布日期\r\n  const [updateDate, setUpdateDate] = useState() //修改日志的日期\r\n  const [typeInfo, setTypeInfo] = useState([]) // 文章类别信息\r\n  const [selectedType, setSelectType] = useState(1) //选择的文章类别\r\n\r\n  marked.setOptions({\r\n    renderer: marked.Renderer(),\r\n    gfm: true,\r\n    pedantic: false,\r\n    sanitize: false,\r\n    tables: true,\r\n    breaks: false,\r\n    smartLists: true,\r\n    smartypants: false,\r\n  });\r\n\r\n  const changeContent = (e) => {\r\n    setArticleContent(e.target.value)\r\n    let html = marked(e.target.value)\r\n    setMarkdownContent(html)\r\n  }\r\n\r\n  const changeIntroduce = (e) => {\r\n    setIntroducemd(e.target.value)\r\n    let html = marked(e.target.value)\r\n    setIntroducehtml(html)\r\n  }\r\n  return (\r\n    <div>\r\n      <Row gutter={5}>\r\n        <Col span={18}>\r\n          <Row gutter={10} >\r\n            <Col span={20}>\r\n              <Input\r\n                placeholder=\"博客标题\"\r\n                size=\"large\" />\r\n            </Col>\r\n            <Col span={4}>\r\n              &nbsp;\r\n                    <Select defaultValue=\"Sign Up\" size=\"large\">\r\n                <Option value=\"Sign Up\">视频教程</Option>\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row gutter={10} >\r\n            <Col span={12}>\r\n              <TextArea\r\n                value={articleContent}\r\n                className=\"markdown-content\"\r\n                rows={35}\r\n                onChange={changeContent}\r\n                onPressEnter={changeContent}\r\n                placeholder=\"文章内容\"\r\n              />\r\n            </Col>\r\n            <Col span={12}>\r\n              <div\r\n                className=\"show-html\"\r\n                dangerouslySetInnerHTML={{ __html: markdownContent }} >\r\n\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Col>\r\n\r\n        <Col span={6}>\r\n          <Row>\r\n            <Col span={24}>\r\n              <Button size=\"large\">暂存文章</Button>&nbsp;\r\n              <Button type=\"primary\" size=\"large\">发布文章</Button>\r\n              <br />\r\n            </Col>\r\n            <Col span={24}>\r\n              <br />\r\n              <TextArea\r\n                rows={4}\r\n                value={introducemd}\r\n                onChange={changeIntroduce}\r\n                onPressEnter={changeIntroduce}\r\n                placeholder=\"文章简介\"\r\n              />\r\n              <div\r\n                className=\"introduce-html\"\r\n                dangerouslySetInnerHTML={{ __html: '文章简介：' + introducehtml }} >\r\n              </div>\r\n            </Col>\r\n            <Col span={12}>\r\n              <div className=\"date-select\">\r\n                <DatePicker\r\n                  placeholder=\"发布日期\"\r\n                  size=\"large\"\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\nexport default AddArticle","C:\\Users\\Administrator\\Desktop\\博客\\admin\\src\\config\\apiUrl.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"53","replacedBy":"57"},{"ruleId":"55","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":41,"column":27,"nodeType":"61","messageId":"62","endLine":41,"endColumn":29},{"ruleId":"63","severity":1,"message":"64","line":8,"column":9,"nodeType":"65","messageId":"66","endLine":8,"endColumn":15},{"ruleId":"63","severity":1,"message":"67","line":10,"column":10,"nodeType":"65","messageId":"66","endLine":10,"endColumn":19},{"ruleId":"63","severity":1,"message":"68","line":10,"column":21,"nodeType":"65","messageId":"66","endLine":10,"endColumn":33},{"ruleId":"63","severity":1,"message":"69","line":11,"column":10,"nodeType":"65","messageId":"66","endLine":11,"endColumn":22},{"ruleId":"63","severity":1,"message":"70","line":11,"column":24,"nodeType":"65","messageId":"66","endLine":11,"endColumn":39},{"ruleId":"63","severity":1,"message":"71","line":16,"column":10,"nodeType":"65","messageId":"66","endLine":16,"endColumn":18},{"ruleId":"63","severity":1,"message":"72","line":16,"column":20,"nodeType":"65","messageId":"66","endLine":16,"endColumn":31},{"ruleId":"63","severity":1,"message":"73","line":17,"column":10,"nodeType":"65","messageId":"66","endLine":17,"endColumn":20},{"ruleId":"63","severity":1,"message":"74","line":17,"column":22,"nodeType":"65","messageId":"66","endLine":17,"endColumn":35},{"ruleId":"63","severity":1,"message":"75","line":18,"column":10,"nodeType":"65","messageId":"66","endLine":18,"endColumn":18},{"ruleId":"63","severity":1,"message":"76","line":18,"column":20,"nodeType":"65","messageId":"66","endLine":18,"endColumn":31},{"ruleId":"63","severity":1,"message":"77","line":19,"column":10,"nodeType":"65","messageId":"66","endLine":19,"endColumn":22},{"ruleId":"63","severity":1,"message":"78","line":19,"column":24,"nodeType":"65","messageId":"66","endLine":19,"endColumn":37},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],["79"],["80"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Header' is assigned a value but never used.","Identifier","unusedVar","'articleId' is assigned a value but never used.","'setArticleId' is assigned a value but never used.","'articleTitle' is assigned a value but never used.","'setArticleTitle' is assigned a value but never used.","'showDate' is assigned a value but never used.","'setShowDate' is assigned a value but never used.","'updateDate' is assigned a value but never used.","'setUpdateDate' is assigned a value but never used.","'typeInfo' is assigned a value but never used.","'setTypeInfo' is assigned a value but never used.","'selectedType' is assigned a value but never used.","'setSelectType' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]